#
# Build documentation and deploy
#
name: Docs

on:
  # pull_request:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/**'

defaults:
  run:
    # default to use bash shell
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Cancel previous runs that are not completed
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Build the website
        run: make -C docs clean html

      - name: Checkout the gh-pages branch
        uses: actions/checkout@v2.4.0
        with:
          ref: gh-pages
          # Checkout to this folder instead of the current one
          path: deploy
          # Download the entire history
          fetch-depth: 0
        if: github.event_name == 'push'

      - name: Push the built HTML to gh-pages
        run: |
          # Make the new commit message. Needs to happen before cd into deploy
          # to get the right commit hash.
          version="stable"
          message="Deploy ${version} from $(git rev-parse --short HEAD)"
          cd deploy
          # Need to have this file so that Github doesn't try to run Jekyll
          touch .nojekyll
          # Delete all the files and replace with our new  set
          echo -e "\nRemoving old files from previous builds of ${version}:"
          rm -rvf ${version}
          echo -e "\nCopying HTML files to ${version}:"
          cp -Rvf ../docs/_build/html/ ${version}/
          # Stage the commit
          git add -A .
          echo -e "\nChanges to be applied:"
          git status
          # Configure git to be the GitHub Actions account
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          # Amend the same commit
          git commit --amend --reset-author -m "$message"
          git commit -m "$message"
          # Make the push quiet just in case there is anything that could leak
          # sensitive information.
          echo -e "\nPushing changes to gh-pages."
          git push -fq origin gh-pages 2>&1 >/dev/null
          echo -e "\nFinished uploading generated files."
        if: (github.event_name == 'push') && (matrix.os == 'ubuntu-latest')
